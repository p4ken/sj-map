BveTs Map 2.02:UTF-8

# 西谷出発信号機
$distance_0 + 113;
# 羽沢横浜国大までの最高速度 86km/hでP接近点灯
Beacon.Put($beacon_max, $section_atsp, 90); // unic/ATS_SO, unic/snp2
Beacon.Put($beacon_turnout, $section_atsp, 0080); // ct/ATSP, rock_on/snp(75でP接近,80で動作)
# Beacon.Put($beacon_strict, $section_atsp, 01111); // 効かず

# ATS-P 85m手前 の直前
$distance_nishiya + 2139;
# 駅間最高速度おわり
Beacon.Put($beacon_turnout_delete, $section_atsp, 0080);
# 武蔵小杉までの最高速度 95km/h
# プレイヤーが意識しやすいように96でP点灯させてもいいかも？ → しかし緩解が90になってしまう(ct/atsp)
# 実際の運転士は95までしか出さない
Beacon.Put($beacon_max, $section_atsp, 105); // unic/snp2

$distance_nishiya + 2185;
# 分岐パターン発生
Beacon.Put($beacon_turnout, $section_atsp, 50045);

$distance_nishiya + 2275;
# 新横浜線から分岐
SpeedLimit.Begin(45);

$distance_nishiya + 2299;
SpeedLimit.End();

$distance_nishiya + 2300;
# アプローチ部の曲線群
SpeedLimit.Begin(45);

$distance_nishiya + 2310;
Structure['atspGreen'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_nishiya + 2315;
Structure['atspGreen'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_nishiya + 2325;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);
Structure['atspGreen'].Put($track_shinyokohama, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_nishiya + 2330;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);
Structure['atspGreen'].Put($track_shinyokohama, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_nishiya + 2340;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_nishiya + 2550;
SpeedLimit.End();

$distance_nishiya + 2675;
# 羽沢線へ合流
SpeedLimit.Begin(45);

$distance_nishiya + 2700;
SpeedLimit.End();

# 2920
$distance_nishiya + 2900;
Beacon.Put($beacon_turnout_delete, $section_atsp, 50045);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
Beacon.Put($beacon_turnout, $section_atsp, 1095);

# ～港北トンネル～

$distance_0 + 6000;
# P接近消灯対策
Beacon.Put($beacon_turnout_delete, $section_atsp, 1095);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
Beacon.Put($beacon_turnout, $section_atsp, 1095);

$distance_tsurumi - 2400;
# 曲線パターン発生
Beacon.Put($beacon_turnout_delete, $section_atsp, 1095);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
Beacon.Put($beacon_turnout, $section_atsp, 200090);

$distance_tsurumi - 2200;
# 生見尾トンネル出口の左カーブ
SpeedLimit.Begin(90);

$distance_tsurumi - 1600;
SpeedLimit.End();

$distance_tsurumi - 1400;
Beacon.Put($beacon_turnout_delete, $section_atsp, 200090);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
Beacon.Put($beacon_turnout, $section_atsp, 1095);

$distance_tsurumi - 1200;
Beacon.Put($beacon_turnout_delete, $section_atsp, 1095);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
Beacon.Put($beacon_turnout, $section_atsp, 200090);

$distance_tsurumi - 1000;
SpeedLimit.Begin(90);

$distance_tsurumi - 350;
SpeedLimit.End();

$distance_tsurumi - 770;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_tsurumi - 775;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 17475;
SpeedLimit.Begin(90);

$distance_shinagawa - 17400;
SpeedLimit.End();

$distance_shinagawa - 17145;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 17140;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 17125;
SpeedLimit.Begin(90);

$distance_shinagawa - 17125;
SpeedLimit.End();
Beacon.Put($beacon_turnout_delete, $section_atsp, 200090);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
Beacon.Put($beacon_turnout, $section_atsp, 300075);

$distance_shinagawa - 16825;
SpeedLimit.Begin(75);

$distance_shinagawa - 16225;
SpeedLimit.End();

$distance_shinagawa - 16025;
Beacon.Put($beacon_turnout_delete, $section_atsp, 200075);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
Beacon.Put($beacon_turnout, $section_atsp, 1095);

$distance_shinagawa - 13875;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 13870;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 13725; # 95→75
SpeedLimit.End();
Beacon.Put($beacon_turnout_delete, $section_atsp, 1095);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
Beacon.Put($beacon_turnout, $section_atsp, 300075);

$distance_shinagawa - 13475;
SpeedLimit.Begin(75);

$distance_shinagawa - 13350;
SpeedLimit.End();

$distance_shinagawa - 13125;
SpeedLimit.Begin(75);

$distance_shinagawa - 13000;
SpeedLimit.End();

$distance_shinagawa - 12800;
Beacon.Put($beacon_turnout_delete, $section_atsp, 200075);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
Beacon.Put($beacon_turnout, $section_atsp, 1095);

$distance_shinagawa - 11509; # 95→60
SpeedLimit.End();
Beacon.Put($beacon_turnout_delete, $section_atsp, 1095);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
# 正しい運転を邪魔しないことを優先。
Beacon.Put($beacon_turnout, $section_atsp, 450060);

$distance_shinagawa - 11109;
SpeedLimit.Begin(60);

$distance_shinagawa - 11075;
SpeedLimit.End();

$distance_shinagawa - 11870;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 11865;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 11385;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 11380;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 10800; # 60→45
Beacon.Put($beacon_turnout_delete, $section_atsp, 200060);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
# 正しい運転を邪魔しないことを優先。
Beacon.Put($beacon_turnout, $section_atsp, 450045);

$distance_shinagawa - 11050;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 11045;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 10425;
SpeedLimit.Begin(45);

$distance_shinagawa - 10400;
SpeedLimit.End();

$distance_shinagawa - 10200;
Beacon.Put($beacon_turnout_delete, $section_atsp, 450045);
distance + 1;
Beacon.Put($beacon_signal, $section_atsp, $data_none);
distance + 1;
Beacon.Put($beacon_turnout, $section_atsp, 160075);

$distance_shinagawa - 10039.5;
SpeedLimit.Begin(75);

$distance_0 + 18960;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);

$distance_0 + 18965;
Structure['atsp'].Put($track_hinkaku, 0,-0.1,0, 0,0,0, $tilt_all, 0);
