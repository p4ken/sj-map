BveTs Map 2.02:UTF-8

0;
$track_kamotsu = 3;

$distance_nishiya + 2175;
Track[$track_kamotsu].Y.Interpolate(5);
Track[$track_kamotsu].X.Interpolate(9);
Repeater['貨物の外壁'].Begin($track_kamotsu, 4.7,0,0, 0,0,0, $tilt_all, 5, 5, 'Fence6L');
Repeater['貨物上りバラスト軌道'].Begin($track_kamotsu, 0,0,0, 0,0,0, $tilt_all, 5, 5, 'BallastPC_K_5a');
Repeater['貨物上り右バラスト軌道'].Begin($track_kamotsu, 4.8,0,0, 0,0,0, $tilt_all, 4.8, 4.8, 'BallastPC_K_5a');
Repeater['下り左バラスト軌道'].Begin($track_kamotsu, 10,0,0, 0,0,0, $tilt_all, 4.5, 4.5, 'BallastPC_K_5a', 'BallastPC_K_5b');
Repeater['下り左バラスト追加'].Begin($track_kamotsu, 10,0,-2, 0,0,0, $tilt_all, 4.8, 4.8, 'Bl_CraBalL_5m');

$distance_nishiya + 2225;
Track[$track_kamotsu].X.Interpolate(9);

$distance_nishiya + 2350;
# ここから接続線が直線で並行する
Track[$track_kamotsu].X.Interpolate(15);

$distance_nishiya + 2775 - 200;
Track[$track_kamotsu].Y.Interpolate(0);

$distance_nishiya + 2775 - 300;
# ここから接続線が右カーブ
$radius_kamotsu_right = 1 / (1 / 1000 - 1 / 300);
Track[$track_kamotsu].X.Interpolate(15, $radius_kamotsu_right);

$distance_nishiya + 2775 - 250;
# ここから接続線が直線で合流してくる
Track[$track_kamotsu].X.Interpolate(13, 2000);
Repeater['貨物の外壁'].End();

$distance_nishiya + 2610;
Structure['SpeedLimEnd'].Put($track_kamotsu, -2.5,-0.8,-0.1, 0,0,0, $tilt_none, 0);
Structure['SpeedLimPole'].Put($track_kamotsu, -2.5,-0.5,0, 0,0,0, $tilt_none, 0);

$distance_nishiya + 2650;
# 合流地点を奥にすべきだけど面倒なのでキロポストを手前にずらした
Structure['kilopost2'].Put($track_kamotsu, -1.8,-0.5,-10, 0,0,-10, $tilt_none, 0);

$distance_nishiya + 2600;
Track[$track_kamotsu].X.Interpolate(7, 0);

$distance_nishiya + 2675;
Track[$track_kamotsu].X.Interpolate(1, 300);

$distance_nishiya + 2700;
Track[$track_kamotsu].X.Interpolate(0, 0);
Repeater['貨物上り右バラスト軌道'].End();
distance - 5;
Repeater['貨物上りバラスト軌道'].End();
distance + 0;
Structure['Rail_5m_R_p4ken'].Put($track_kamotsu, 0,0,0, 0,0,0, $tilt_all, 5);

$distance_nishiya + 2699;
Repeater['下り左バラスト軌道'].End(); # underpassへ引き継ぐ
Repeater['下り左バラスト追加'].End(); # underpassへ引き継ぐ
