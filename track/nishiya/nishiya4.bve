BveTs Map 2.02:UTF-8

0;
$track_nishiya4 = 0;

0;
Background.Change('Bg_fine_summer');
Repeater['バラスト軌道'].Begin0($track_nishiya4, $tilt_all, 5, 5, 'BallastPC_K_5a');

$distance_0 + 0;
Curve.Interpolate();

$distance_0 + 25;
#BCC R=900 TCL=25 CCL=113 C=25.0
Curve.Interpolate(900, 0.025);

$distance_0 + 55;
Gradient.Interpolate(-2); # 逆延伸ならこれも手前へ
Gradient.Interpolate();

$distance_0 + 105;
# 勾配標

$distance_0 + 140;
Curve.Interpolate();

$distance_0 + 145;
Repeater['バラスト軌道'].End();
# ここからＵ型擁壁部 100m
Repeater['上り直結軌道'].Begin0($track_nishiya4, $tilt_all, 5, 5, 'Slab2S5m');

$distance_0 + 240;
Repeater['上り直結軌道'].End();
# ここから西谷トンネル

$distance_0 + 155;
Gradient.Interpolate(-35);

$distance_0 + 165;
Curve.Interpolate(0, 0);

$distance_0 + 240;
Curve.Interpolate();
Background.Change();

$distance_0 + 265;
Curve.Interpolate(800, 0.05); #適当

$distance_0 + 340; #適当
Curve.Interpolate(800, 0.05);
Curve.Interpolate(0, 0.05);

$distance_0 + 365;
Curve.Interpolate(0, 0);

$distance_0 + 515;
Gradient.Interpolate(); #R3000

$distance_0 + 560;
Curve.Interpolate(); #BTC
Gradient.Interpolate(-20);

$distance_0 + 610;
# R=-550 C=不明 CCL=不明 TCL=不明
Curve.Interpolate(-550, -0.07);

$distance_0 + 636;
Gradient.Interpolate(); #R4000

$distance_0 + 844;
Gradient.Interpolate(32);

$distance_0 + 990;
Curve.Interpolate();

$distance_0 + 1015;
Structure['nd-1500'].Put($track_nishiya4, 0,0,0, 0,0,0, $tilt_all, 25);

$distance_0 + 1040;
Curve.Interpolate(0, 0); #ETC
Repeater['上り直結軌道'].Begin0($track_nishiya4, $tilt_all, 25, 25, 'railn1');

$distance_0 + 1196;
Gradient.Interpolate(); #R3000

$distance_0 + 1398;
Gradient.Interpolate(-35);

$distance_0 + 1462;
Gradient.Interpolate(); #R3000

$distance_0 + 1538;
Curve.Interpolate(); #BTC
Gradient.Interpolate(-10);

$distance_0 + 1590;
# R=-600 C=不明 CCL=不明 TCL=不明
Curve.Interpolate(-600, -0.06);
# 地上が見通せるので背景を変更
Background.Change('Bg_fine_summer');

$distance_0 + 1617;
Gradient.Interpolate(); #R4000

$distance_0 + 1757;
Gradient.Interpolate(25);

$distance_0 + 1790;
Curve.Interpolate();

$distance_0 + 1840;
Curve.Interpolate(0, 0); #ETC

$distance_0 + 1911;
Gradient.Interpolate(); #R3000

$distance_0 + 1971;
Gradient.Interpolate(5);

$distance_0 + 1965;
Gradient.Interpolate(5);

$distance_0 + 2100;
Curve.Interpolate();
Structure['GradualDiminution_Ps'].Put($track_nishiya4, 2,0,0, 0,0,0, $tilt_none, 0); # R1000に見える

$distance_0 + 2020;
Structure['kilopost1'].Put($track_nishiya4, 2,-1,0, 0,90,0, $tilt_none, 0); # 2km

$distance_0 + 2140;
# R=794.9 C=30 TCL=40 CCL=71
Curve.Interpolate(-794.9, -0.030);
Structure['Curve_P'].Put($track_nishiya4, 2,0,0, 0,0,0, $tilt_none, 0); # R1000に見える

$distance_0 + 2193;
Gradient.Interpolate();

$distance_0 + 2199;
# 現地写真より
Gradient.Interpolate(7.0);

$distance_0 + 2211;
Curve.Interpolate();

$distance_0 + 2251;
Curve.Interpolate(0, 0);

# 分岐器。左：鶴見方面　右：新横浜方面
