BveTs Map 2.02:UTF-8

# 現地調査 13K700mから
$distance_shinagawa - 13700;
Repeater['上り右バラスト'].Begin($track_hinkaku, 0.2,0,0, -0.1,0,0, $tilt_gradient, 4.8, 4.8, 'Bl_CraBalR_5m');

$distance_shinagawa - 13574;
Gradient.Interpolate();

$distance_shinagawa - 13570;
Gradient.Interpolate(0);

$distance_shinagawa - 13525;
Curve.Interpolate();

$distance_shinagawa - 13475;
# R=400 C=不明 CCL=80 TCL=60
Curve.Interpolate(0, -0.07);
Curve.Interpolate(-400, -0.07);

$distance_shinagawa - 13402;
# ここまで -1‰ ここからLEVEL
Structure['Gp_UL'].Put($track_hinkaku, -2.3,-0.3,0, 0,180,-15, $tilt_none, 0);

$distance_shinagawa - 13400;
Structure['kilopost34ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);

$distance_shinagawa - 13350;
Curve.Interpolate(-400, -0.07);
Curve.Interpolate(0, -0.07);

$distance_shinagawa - 13300;
Curve.Interpolate(0, 0);
Structure['kilopost33ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);

$distance_shinagawa - 13200;
Structure['kilopost32ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);

$distance_shinagawa - 13168;
# 実際のBTC
# 緩和省略のためカントだけ逓減する
Curve.Interpolate();

$distance_shinagawa - 13125;
# R=400 C=70 CCL=78 TCL=60
# 緩和省略のためCCLは長めにする
Curve.Interpolate(0, 0.070);
Curve.Interpolate(400, 0.070);

$distance_shinagawa - 13108;
Structure['Curve_P'].Put($track_hinkaku, -1.8,0,0, 0,0,0, $tilt_none, 0); # 実際のBCC

$distance_shinagawa - 13030;
Structure['Curve_P'].Put($track_hinkaku, -1.8,0,0, 0,180,0, $tilt_none, 0); # 実際のECC

$distance_shinagawa - 13000;
Curve.Interpolate(400, 0.070);
Curve.Interpolate(0, 0.070);
Structure['kilopost1'].Put($track_hinkaku, -1.8,0,0, 0,0,0, $tilt_none, 0); # 13km

$distance_shinagawa - 12970;
# 実際のETC

$distance_shinagawa - 12975;
Curve.Interpolate(0, 0);

$distance_shinagawa - 12900;
Gradient.Interpolate();

$distance_shinagawa - 12896;
Gradient.Interpolate(1.5);

$distance_shinagawa - 12550;
Curve.Interpolate();

$distance_shinagawa - 12525;
Structure['kilopost2'].Put($track_hinkaku, -1.8,-0.6,0, 0,0,0, $tilt_none, 0);
# R=1600 C=不明 CCL=23 TCL=30
# 緩和省略のため半径を調整する
Curve.Interpolate(0, 0.03);
Curve.Interpolate(1600, 0.03);

$distance_shinagawa - 12475;
Curve.Interpolate(1600, 0.03);
Curve.Interpolate(0, 0.03);

$distance_shinagawa - 12450;
Curve.Interpolate(0, 0);

$distance_shinagawa - 12325;
Curve.Interpolate();

$distance_shinagawa - 12300;
# R=不明 C=不明 CCL=不明 TCL=不明
Curve.Interpolate(0, -0.03);
Curve.Interpolate(-2000, -0.03);

$distance_shinagawa - 12225;
Curve.Interpolate(-2000, -0.03);
Curve.Interpolate(0, -0.03);

$distance_shinagawa - 12200;
Curve.Interpolate(0, 0);

$distance_shinagawa - 12000;
Structure['kilopost1'].Put($track_hinkaku, -1.8,0,0, 0,0,0, $tilt_none, 0); # 12km

$distance_shinagawa - 11902;
Gradient.Interpolate();

$distance_shinagawa - 11901;
Structure['Gp_UD'].Put($track_hinkaku, -2,-0.3,0, 0,0,0, $tilt_none, 0); # +1.8パーミル
Gradient.Interpolate(1.8);

$distance_shinagawa - 11900;
Structure['kilopost39ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);

$distance_shinagawa - 11850;
Curve.Interpolate();

$distance_shinagawa - 11825;
Structure['kilopost38ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);
# R=1000 C=60 CCL=33 TCL=50
# 緩和省略のため半径・曲線長を調整する
Curve.Interpolate(0, 0.06);
Curve.Interpolate(1200, 0.06);

$distance_shinagawa - 11725;
Curve.Interpolate(1200, 0.06);
Curve.Interpolate(0, 0.06);

$distance_shinagawa - 11700;
Curve.Interpolate(0, 0);
Structure['kilopost37ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);

$distance_shinagawa - 11675;
Curve.Interpolate();

$distance_shinagawa - 11650;
# R=不明 C=不明 CCL=不明 TCL=不明
Curve.Interpolate(0, -0.04);
Curve.Interpolate(-1500, -0.04);

$distance_shinagawa - 11575;
Structure['kilopost36ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);
Curve.Interpolate(-1500, -0.04);
Curve.Interpolate(0, -0.04);

$distance_shinagawa - 11550;
Curve.Interpolate(0, 0);

$distance_shinagawa - 11509;
Gradient.Interpolate();

$distance_shinagawa - 11503;
Gradient.Interpolate(0);

$distance_shinagawa - 11500;
Structure['kilopost2'].Put($track_hinkaku, -1.8,0,0, 0,0,0, $tilt_none, 0);

$distance_shinagawa - 11350;
Curve.Interpolate();

$distance_shinagawa - 11300;
Structure['kilopost33ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);
# R=1600 C=30 CCL=不明 TCL=不明
Curve.Interpolate(0, -0.030);
Curve.Interpolate(-2000, -0.030);

$distance_shinagawa - 11261;
Gradient.Interpolate();

$distance_shinagawa - 11260;
Gradient.Interpolate(0.2);

$distance_shinagawa - 11200;
Structure['kilopost32ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);

$distance_shinagawa - 11150;
Curve.Interpolate(-2000, -0.030);
Curve.Interpolate(0, -0.030);

$distance_shinagawa - 11109;
Curve.Interpolate(0, 0);
Curve.Interpolate(-547, -0.01); # チラつき防止カント

$distance_shinagawa - 11075;
Curve.Interpolate();
Curve.Interpolate(0);
Repeater['上り右バラスト'].End();

$distance_shinagawa - 11050;
#R=1200 C=不明
Curve.Interpolate(0, 0.05);
Curve.Interpolate(1400, 0.05);
Structure['Long_sw'].Put($track_hazawa, 0,0,0, 0,0,0, $tilt_all, 0);

$distance_shinagawa - 11000;
Structure['kilopost1'].Put($track_hinkaku, -1.8,0,0, 0,0,0, $tilt_none, 0); # 11km

$distance_shinagawa - 10950;
Curve.Interpolate(1400, 0.05);
Curve.Interpolate(0, 0.05);

$distance_shinagawa - 10925;
Curve.Interpolate(0, 0);

$distance_shinagawa - 10900;
Structure['kilopost39ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);

$distance_shinagawa - 10865;
Curve.Interpolate();

$distance_shinagawa - 10845;
# R=4000 C=10 TCL=20
Curve.Interpolate(0, 0.010);
Curve.Interpolate(4000, 0.010);

$distance_shinagawa - 10820;
Curve.Interpolate(4000, 0.010);
Curve.Interpolate(0, 0.010);

$distance_shinagawa - 10800;
Curve.Interpolate(0, 0);
Structure['kilopost38ky'].Put($track_hinkaku, -1.8,-0.3,0, 0,90,0, $tilt_none, 0);

$distance_shinagawa - 10731;
# BTC
Curve.Interpolate();

$distance_shinagawa - 10700;
# R=800 C=45 CCL=50 TCL=73
# 緩和省略のため円曲線を調整
Curve.Interpolate(0, 0.045);
Curve.Interpolate(1000, 0.045);

$distance_shinagawa - 10600;
Curve.Interpolate(1000, 0.045);
Curve.Interpolate(0, 0.045);

$distance_shinagawa - 10535;
# ETC
Curve.Interpolate(0, 0);

$distance_shinagawa - 10550;
Curve.Interpolate();

$distance_shinagawa - 10500;
Structure['kilopost2'].Put($track_hinkaku, -1.8,0,0, 0,0,0, $tilt_none, 0);
Curve.Interpolate(0, -0.05);
# ゆるめの曲線
Curve.Interpolate(-1000, -0.05);

$distance_shinagawa - 10450;
Curve.Interpolate(-1000, -0.05);
Curve.Interpolate(0, -0.05);

$distance_shinagawa - 10425;
Curve.Interpolate(0, 0);
Curve.Interpolate(-308);

$distance_shinagawa - 10400;
Curve.Interpolate();
Curve.Interpolate(0);
Gradient.Interpolate();

$distance_shinagawa - 10400;
#   ||
#  /|| 横須賀線へ合流
# / ||
